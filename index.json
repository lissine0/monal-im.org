[{"content":"Implemented Features XEP Status Since XEP-0004: Data Forms partial 4.9 XEP-0030: Service Discovery complete 4.6 XEP-0045: Multi-User Chat partial 5.0 XEP-0048: Bookmarks complete 5.0 XEP-0059: Result Set Management. Used by other XEPs. complete 4.8 XEP-0060: Publish-Subscribe partial 4.9 XEP-0066: Out of Band Data partial 4.9 XEP-0077: In-Band Registration partial XEP-0084: User Avatar complete 4.9 XEP-0085: Chat State Notifications complete 4.7 XEP-0092: Software Version complete XEP-0115: Entity Capabilities complete 4.7 XEP-0162: Best Practices for Roster and Subscription Management complete XEP-0163: Personal Eventing Protocol complete 4.9 XEP-0172: User Nickname complete 4.9 XEP-0184: Message Receipts complete 4.7 XEP-0191: Blocking Command complete 5.0 XEP-0198: Stream Management complete 4.6 XEP-0199: XMPP Ping complete 4.7 XEP-0223: Persistent Storage of Private Data via PubSub complete 4.9 XEP-0237: Roster Versioning complete 4.6 XEP-0245: The /me Command complete 4.9 XEP-0249: Direct MUC Invitations complete 5.0 XEP-0280: Message Carbons complete 4.5 XEP-0286: Mobile Considerations on LTE Networks complete 4.7 XEP-0305: XMPP Quickstart complete 5.1.1 XEP-0308: Last Message Correction complete 4.8 XEP-0313: Message Archive Management complete 4.8 XEP-0319: Last User Interaction in Presence complete 4.7 XEP-0333: Chat Markers (received markers won\u0026#39;t ever be implemented, use XEP-0184 instead) partial 4.8 XEP-0352: Client State Indication complete 4.7 XEP-0357: Push Notifications complete 4.8 XEP-0359: Unique and Stable Stanza IDs complete 4.8 XEP-0363: HTTP File Upload complete 4.9 XEP-0368: SRV records for XMPP over TLS complete 4.6 XEP-0379: Pre-Authenticated Roster Subscription partial 4.9 XEP-0380: Explicit Message Encryption complete 5.1 XEP-0384: OMEMO Encryption (currently only in 1:1 chats, not MUCs) complete 4.8 XEP-0392: Consistent Color Generation complete 5.1 XEP-0410: MUC Self-Ping (Schrödinger\u0026#39;s Chat) complete 5.0 XEP-0423 XMPP Compliance Suites 2020 partial XEP-0441: Message Archive Management Preferences complete 4.8 XEP-0454: OMEMO Media sharing partial 5.0 Planned Features XEP Status XEP-0153: vCard-Based Avatars (planned only for MUCs) planned XEP-0158: CAPTCHA Forms planned XEP-0215: External Service Discovery planned XEP-0369: Mediated Information eXchange (MIX) planned XEP-0374: OpenPGP for XMPP Instant Messaging planned XEP-0402: PEP Native Bookmarks planned ","permalink":"https://monal-im.github.io/monal-im.org/supportedxeps/","summary":"Implemented Features XEP Status Since XEP-0004: Data Forms partial 4.9 XEP-0030: Service Discovery complete 4.6 XEP-0045: Multi-User Chat partial 5.0 XEP-0048: Bookmarks complete 5.0 XEP-0059: Result Set Management. Used by other XEPs. complete 4.8 XEP-0060: Publish-Subscribe partial 4.9 XEP-0066: Out of Band Data partial 4.9 XEP-0077: In-Band Registration partial XEP-0084: User Avatar complete 4.9 XEP-0085: Chat State Notifications complete 4.7 XEP-0092: Software Version complete XEP-0115: Entity Capabilities complete 4.7 XEP-0162: Best Practices for Roster and Subscription Management complete XEP-0163: Personal Eventing Protocol complete 4.","title":"Supported XEPs"},{"content":" Monal MUC: monal@chat.yax.im Github Tickets: https://github.com/monal-im/Monal/issues Email: info@monal-im.org ","permalink":"https://monal-im.github.io/monal-im.org/support/","summary":" Monal MUC: monal@chat.yax.im Github Tickets: https://github.com/monal-im/Monal/issues Email: info@monal-im.org ","title":"Support"},{"content":"Monal is developed by volunteers and community collaboration. The work which has been done is usually not paid, and the developers ask for donations to keep up service costs and development in the future! Please consider giving a little back for the hard work which has been conducted. Currently, there are three ways for financial support of the Monal development:\nDonate via GitHub Sponsors Donate via Libera Pay EU citizens can donate via SEPA, too. Just contact Thilo Molitor via mail to thilo@monal-im.org to get his IBAN. Here you can read about further support of the development!\nFind general information in the Monal Wiki.\nTranslations We host and manage translations via Weblate.\n","permalink":"https://monal-im.github.io/monal-im.org/donate/","summary":"Monal is developed by volunteers and community collaboration. The work which has been done is usually not paid, and the developers ask for donations to keep up service costs and development in the future! Please consider giving a little back for the hard work which has been conducted. Currently, there are three ways for financial support of the Monal development:\nDonate via GitHub Sponsors Donate via Libera Pay EU citizens can donate via SEPA, too.","title":"Donate"},{"content":" iOS macOS macOS (homebrew) Stable App Store App Store Beta Testflight Testflight brew install \u0026ndash;cask monal Alpha brew tap monal-im/homebrew-monal-alpha\nbrew install \u0026ndash;cask monal-alpha Release cycle ","permalink":"https://monal-im.github.io/monal-im.org/install/","summary":" iOS macOS macOS (homebrew) Stable App Store App Store Beta Testflight Testflight brew install \u0026ndash;cask monal Alpha brew tap monal-im/homebrew-monal-alpha\nbrew install \u0026ndash;cask monal-alpha Release cycle ","title":"Install"},{"content":"Monal-im.org (Website) A user’s IP address will be logged in the HTTP server logs. All server logs are purged every two weeks and there isn’t any way for us to associate this information with any particular individual.\nMonal (App) Monal for iOS and macOS will register for APNS push notifications via a server to server (s2s) connection from your XMPP server to our push server. Your XMPP JID alongside with a push identifier and secret token from apple, that is only valid for this app, will be saved and logged in the push-server logs. While we don’t intend to track you. All server logs are purged every two weeks. Our logs allow us to see the following details:\nYour JID (including your server’s hostname) Time when you register for push notifications Your apple push node and push token that was generated for Monal by Apple Time when your XMPP server triggered a push notification to your Monal device To fulfill its duty, our push server has to hold some information associated with an Apple push token, until Apple marks the token a deleted, which usually means you have uninstalled the app (Info: Apple confirms if a token is still valid on every push). In detail these information consists of:\nThe Apple push token The timestamp of the last push error The timestamp of the last successful push The timestamp of the registration of your device with Monal’s push-server The timestamp when the registration was renewed A random UUID identifying your device A random secret used by your XMPP server to authenticate a push Additionally, your local device will contain a log file with all sent and received raw XMPP messages as well as debug logs. It does contain sensible personal data! This file will never be transferred to us, except if you explicitly (manually) send it to us (e.g. via mail).\nAll apps do track crashes and usage data anonymously. This is opt-in only and controlled by iOS and macOS global settings. If a user decides not to send any data to developers, no crash logs are sent to Monal developers.\nGDPR Subject Access Requests (SAR) European GDPR allows users to request a copy of all data retained about them. Please send GDPR requests to info@monal-im.org. As by GDPR we need to validate your JID before answering to your inquiry. Therefore, we will provide you a JID you must send a confirmation to, before we can answer your request and send you all retained data related to your JID.\n","permalink":"https://monal-im.github.io/monal-im.org/privacy/","summary":"Monal-im.org (Website) A user’s IP address will be logged in the HTTP server logs. All server logs are purged every two weeks and there isn’t any way for us to associate this information with any particular individual.\nMonal (App) Monal for iOS and macOS will register for APNS push notifications via a server to server (s2s) connection from your XMPP server to our push server. Your XMPP JID alongside with a push identifier and secret token from apple, that is only valid for this app, will be saved and logged in the push-server logs.","title":"Privacy"},{"content":" TLDR:\nInfo: Monal will stop support for iOS 12, iOS 13 and macOS Catalina!\nWe are searching for a SwiftUI developer.\nWe need a new simplified website.\nWith better continuous funding, our push servers will move from the US to Europe.\nWe have a new support mail: info@monal-im.org\nTwo years ago we decided to rewrite the Monal app almost entirely and improve it gradually in the process, instead of creating another XMPP Client for iOS and macOS. We successfully managed to transform Monal from an app that had flaws and issues with many functions to a level that promotes a user-friendly experience with working features such as push notification, group chat, and partially end-to-end encryption support (OMEMO). If you are selecting an XMPP client for Apple systems we think that Monal is a great choice nowadays. We have been investing more than a thousand hours and worked hard to overcome all the flaws, the legacy app had. We invite you to give the recent beta a try!\nThe development of Monal has not yet finished though, and many more features are hopefully to come. But due to our time constraints, it sometimes takes a bit longer than we and the community would like. We are at most two developers at the moment using our spare time to maintain Monal and develop new features. As we are developing Monal in our spare time without decent funding, it is sometimes hard to prioritize specific features. Please give this circumstance some credits.\nWhat should Monal look like in the future? To give you a bit of insight knowledge of our plans we tried to summarize the most important tasks.\nInterface (SwiftUI) In the future Monal should be easy to use. Therefore, the interface requires a proper rework and while we are at it, it should be ported to SwiftUI. While we are still improving in designing with SwiftUI, we would be glad if there is a SwiftUI \u0026amp; Open Source enthusiast who would like to help us with this.\nWith this transition we would like to improve the accessibility of the app as well. If you like to support an open source project, and you would like to be part of our SwiftUI journey please contact us.\nTask:\nAdd new MUC creation and management UI Port the chat view Finish contact Details List group chat (MUC) participants Display OMEMO encryption fingerprints for verification Port our settings Port all other remaining views Qualifications:\nGeneral knowledge around SwiftUI (iOS and Catalyst) Interest in improving a (XMPP) chat client Optional, but preferred: Some experience with XMPP (e.g. some weeks, or maybe months of usage of Monal or any other “modern” XMPP client) Optional: Experience in designing inclusive / accessible UI Website We need a modern (simplified) Hugo based website that is easier to understand, similar to Conversations, Dino or Gajim.\nIf you have some spare time, and you are a skilled in creating websites with Hugo please contact us.\nRequirements:\nSimple design nothing too fancy Privacy by design → No analytics, no external CSS, jss, … usage OMEMO Encryption in Group Chat (MUC) We started to integrate OMEMO for group chats (MUC) into our alpha build. The receiving and sending sides are already implemented, but there are a few more steps until we can release it into the beta.\nSwitching to our new Domain monal-im.org In late 2021 we decided that we would like to have a domain with DNSSEC as our current top level domain does not support it. This domain will mainly be used for our push servers and mail servers in the future. From now on you will be able to reach us via info@monal-im.org.\nBuild server Thanks to ~20 generous donors, we were able to buy a new build server that will be used to build our alpha, beta and stable releases. Furthermore, Thilo is now finally able to debug code with a proper debugger connected to his phone.\nRedundant Push Servers We are currently using an AWS US instance for our push server that is not redundant and failed in 2021 more frequently than we liked it to. For that reason we started an internal project to auto-deploy our push server with Ansible and looked into ways for running a redundant push server setup. The first tests look promising so far, but a few more things need to be sorted out before we can switch over to our new setup.\nBefore we can switch to the new push server setup, we need a stable funding each month. We estimate that renting a VM in Germany and one at a different hoster in Finland would cost us between 16€ to 32€ each month. Without a stable funding we might not be able to afford this new setup and our push servers would stay in the US.\nThanks to our generous build server donors, we have a few bucks left that will be used as a ~5 month buffer in case of fluctuant push server funding\nPrivacy improved push servers With our current push implementation our so-called “app servers” see your JID (username + server), a unique but otherwise opaque device id and an opaque token generated by apple, as well as your interaction times (when you register for push notifications, timestamps when your XMPP server triggers a push notification device).\nIf you use multiple accounts on one device, the unique device id is shared across all accounts. We don’t think that this is ideal, as we know all jid’s a user is using.\nIn the future we want to try to reduce our knowledge by hiding your username from our app servers. If our idea works, we would only see that a device is registered on one or more domains and the timestamps that a push message was triggered from each domain that is used.\nAudio and Video Calls Many clients such as Conversations and Dino support audio and video calls, so Monal should be next 🙂\nEnd-of-life: iOS 12, iOS 13 and macOS Catalina will not be supported anymore Our user group on iOS 12, iOS 13 as well as macOS Catalina has decreased in last years while the resources needed to maintain these old platforms increased. We therefore decided to focus on newer iOS versions and drop the old ones. The next stable release will only be supported on iOS 14 and higher and macOS Big Sur and higher. We are still unsure how long we will support iOS 14, as most of the devices also support iOS15.\nDonations and Support Monal is developed by volunteers and community collaboration. The work which has been done is usually not paid, and the developers need to keep up service costs and development in the future! Please consider giving a bit back for the hard work which has been conducted. Currently, there are three ways to financially support the Monal development:\nDonate via GitHub Sponsors Donate via Libera Pay EU citizens can donate via SEPA, too. Just contact Thilo Molitor via mail to info@monal-im.org to get his IBAN. Here you can read about further support of the development! Find general information in the Monal Wiki.\nTranslations We host and manage translations via Weblate.\nMany thanks! Of course, thank you very much to everyone who supported us in the past two years! 🙂\nYou can follow us via Mastodon.\n","permalink":"https://monal-im.github.io/monal-im.org/post/00001-monal-development/","summary":"TLDR:\nInfo: Monal will stop support for iOS 12, iOS 13 and macOS Catalina!\nWe are searching for a SwiftUI developer.\nWe need a new simplified website.\nWith better continuous funding, our push servers will move from the US to Europe.\nWe have a new support mail: info@monal-im.org\nTwo years ago we decided to rewrite the Monal app almost entirely and improve it gradually in the process, instead of creating another XMPP Client for iOS and macOS.","title":"Insights Into Monal Development"},{"content":"There has never been a better time to get into XMPP. Monal is fast friendly and free. Just download the app for iOS or Mac, login or register and you are ready to chat in minutes. It looks and works the way other apps do, so there is no need to “learn XMPP” or even care what it is. If you have used Messenger, WhatsApp or iMessage you can use this.\nDesigned for iOS and Mac Things look and work the way you expect. iOS, iPadOS or macOS, there is a version of Monal for you.\nIt is updated to add new technology as soon as it is announced. Landscape, Portrait, split view, side by side, push notifications, dark mode. The list goes on and keeps growing.\nYou are not the product Monal is free and ad free but you are not the product. This app exists because we want it to and it is free because chat networks are only as good as the number of people who use it.\nTechnical details If you have made it this far, you probably want to know what makes this app tick. Monal is free and open source with a BSD license. Find us on GitHub! You can also find a list of supported XEPs.\nIf you choose to use the feature, messages are end to end encrypted with OMEMO.\n","permalink":"https://monal-im.github.io/monal-im.org/home/","summary":"There has never been a better time to get into XMPP. Monal is fast friendly and free. Just download the app for iOS or Mac, login or register and you are ready to chat in minutes. It looks and works the way other apps do, so there is no need to “learn XMPP” or even care what it is. If you have used Messenger, WhatsApp or iMessage you can use this.","title":"Monal-IM. Privacy like it's 1999"},{"content":"Thilo Molitor Vogelsbergstr. 18 68642 Bürstadt Germany\neMail: info[at]monal[minus]im[dot]org\n","permalink":"https://monal-im.github.io/monal-im.org/about/","summary":"Thilo Molitor Vogelsbergstr. 18 68642 Bürstadt Germany\neMail: info[at]monal[minus]im[dot]org","title":"About"},{"content":"The Monal app currently covers the following chat features::\nDecentral and federated chat standard XMPP Private and group messaging Privacy-respecting push notifications Encrypted private and group chats (state of the art encryption (OMEMO)) Message history Free selection of your XMPP account provider Voice messaging Message archiving Upload of files, videos and images (HTTP Upload) Many settings and a design to offer privacy settings in the app to the need of the user A detailed and technical listing of your supported features (so called XMPP Extensions) can be found in our DOAP file. Planned features:\nAudio and Video calls User-interface overhaul ","permalink":"https://monal-im.github.io/monal-im.org/features/","summary":"The Monal app currently covers the following chat features::\nDecentral and federated chat standard XMPP Private and group messaging Privacy-respecting push notifications Encrypted private and group chats (state of the art encryption (OMEMO)) Message history Free selection of your XMPP account provider Voice messaging Message archiving Upload of files, videos and images (HTTP Upload) Many settings and a design to offer privacy settings in the app to the need of the user A detailed and technical listing of your supported features (so called XMPP Extensions) can be found in our DOAP file.","title":"Features"}]